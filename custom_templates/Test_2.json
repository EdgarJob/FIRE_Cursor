{
  "name": "Test_2",
  "code": "elif template_name == \"Test_2\":\n    description = \"Create a vulnerability score based on multiple health indicators\"\n    \n    # Look for relevant columns\n    age_col = find_column(columns_lower, columns_dict, ['age'])\n    gender_col = find_column(columns_lower, columns_dict, ['sex', 'gender']) \n    bp_col = find_column(columns_lower, columns_dict, ['bloodpressure', 'bp', 'restingbp'])\n    chol_col = find_column(columns_lower, columns_dict, ['cholesterol', 'chol'])\n    bs_col = find_column(columns_lower, columns_dict, ['bloodsugar', 'bs', 'fastingbs'])\n    \n    if not all([age_col, gender_col, bp_col, chol_col, bs_col]):\n        raise ValueError(\"Could not find all required columns for vulnerability score\")\n        \n    # Perform the analysis  \n    df['age_score'] = df[age_col].apply(lambda x: 2 if x > 50 else 1)\n    df['gender_score'] = df[gender_col].apply(lambda x: 2 if x.lower() == 'f' else 1)\n    df['bp_score'] = df[bp_col].apply(lambda x: 2 if x > 130 else 1)  \n    df['chol_score'] = df[chol_col].apply(lambda x: 2 if x > 240 else 1)\n    df['bs_score'] = df[bs_col].apply(lambda x: 2 if x == 1 else 1)\n\n    df['vulnerability_score'] = df[['age_score', 'gender_score', 'bp_score', 'chol_score', 'bs_score']].sum(axis=1)\n    \n    # Create result dataframe\n    result = df.groupby('vulnerability_score').size().reset_index()\n    result.columns = ['Vulnerability Score', 'Count'] \n    result['Percentage'] = round(100 * result['Count'] / result['Count'].sum(), 2)\n    result = result.sort_values('Vulnerability Score')\n    \n    viz_type = \"bar\"\n    return result, viz_type, description",
  "description": "Create a vulnerability score based on multiple health indicators",
  "viz_type": "bar",
  "timestamp": "2025-04-11T16:32:51.919012"
}